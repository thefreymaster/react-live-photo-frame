{"version":3,"sources":["hooks/index.tsx","components/Clock/index.tsx","providers/index.tsx","api/index.ts","components/Controller/index.tsx","components/Video/index.tsx","components/Device/index.tsx","components/Weather/Future.tsx","components/DigitalClock/index.tsx","components/Weather/index.tsx","Holiday/index.tsx","routes/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["useIsDay","React","useState","Date","getHours","isDay","setIsDay","useLayoutEffect","checkTimeOfDay","setTimeout","Clock","theme","background","center","seconds","minutes","hour","tick","smallTickWidth","largeTickWidth","secondHandWidth","minuteHandWidth","hourHandWidth","initialScale","in","Context","createContext","value","socket","emit","view","data","device","setDevice","s","useGlobalState","useContext","Provider","props","children","getVideosList","axios","get","then","res","Controller","useQuery","isLoading","global","history","useHistory","useDisclosure","isOpen","onToggle","handleIsOpen","route","push","to","display","flexDir","minW","color","fontSize","fontWeight","marginBottom","flexWrap","justifyContent","maxW","minH","onClick","m","colorScheme","isFullWidth","icon","mt","map","item","alignItems","string","charAt","toUpperCase","slice","replace","Video","name","useParams","size","console","log","style","overflow","id","autoPlay","controls","width","loop","muted","playsInline","src","type","Device","localStorage","setItem","daysOfTheWeek","Future","forcastTime","forcast","dt_txt","main","current","weather","padding","margin","borderRadius","maxWidth","alt","letterSpacing","fontFamily","useEasing","duration","start","temp","end","getDay","DigitalClock","now","toLocaleTimeString","time","setTime","getTime","Weather","humidity","feels_like","wind","speed","deg","description","setWeather","list","setForcast","loading","setloading","previousTemp","setPreviousTemp","getForcast","lat","long","a","process","fcast","getWeather","result","coord","lon","today","fiveDayForcast","includes","pl","mb","opacity","p","lineHeight","toDateString","flexGrow","orientation","pt","toFixed","transform","transition","index","Holiday","defaultOptions","autoplay","animationData","HALLOWEEN","options","height","Routes","timeOfDay","useTimeOfDay","path","io","App","histroy","location","useLocation","getItem","useEffect","on","window","reload","innerHeight","innerWidth","isMobile","backgroundColor","pathname","position","bottom","right","minHeight","minWidth","left","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.6bc03068.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const useIsDay = () => {\n    const [isDay, setIsDay] = React.useState(new Date().getHours() >= 6 && new Date().getHours() <= 17);\n\n    React.useLayoutEffect(() => {\n        const checkTimeOfDay = () => {\n            if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n                setIsDay(true);\n            }\n            else {\n                setIsDay(false);\n            }\n            setTimeout(() => {\n                checkTimeOfDay();\n            }, 300000);\n        }\n        checkTimeOfDay();\n    }, []);\n\n    // if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n    //     return true\n    // }\n    return isDay;\n}\n\nexport const useTimeOfDay = () => {\n    const [timeOfDay, setTimeOfDay] = React.useState(new Date().getHours());\n    console.log(timeOfDay)\n    React.useLayoutEffect(() => {\n        const checkTimeOfDay = () => {\n            setTimeOfDay(new Date().getHours())\n            setTimeout(() => {\n                checkTimeOfDay();\n            }, 36000000);\n        }\n    }, [])\n\n    return timeOfDay;\n}","import { ScaleFade } from '@chakra-ui/react';\nimport React from 'react';\nimport AnalogClock from 'react-analog-clock';\nimport { useIsDay } from '../../hooks/index';\n\nexport const Clock = () => {\n    const isDay = useIsDay();\n    const theme = {\n        background: isDay ? '#fff' : '#000',\n        center: isDay ? '#000' : '#fff',\n        seconds: isDay ? '#000' : '#fff',\n        minutes: isDay ? '#000' : '#fff',\n        hour: isDay ? '#000' : '#fff',\n        tick: isDay ? '#000' : '#fff',\n        smallTickWidth: 2,\n        largeTickWidth: 4,\n        secondHandWidth: 3,\n        minuteHandWidth: 6,\n        hourHandWidth: 8,\n    };\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <AnalogClock theme={theme} />\n        </ScaleFade>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext({\n    value: {},\n    socket: {\n        emit: (view: string, data: any) => { }\n    },\n    device: 'frame',\n    setDevice: (s: string) => {}\n});\n\nexport const useGlobalState = () => React.useContext(Context);\n\nexport const Provider = (props: { children: React.ReactNode, value: any }) => {\n    return (\n        <Context.Provider value={{ ...props as any }}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import axios from \"axios\"\n\nexport const changeView = async (view: string) => {\n    await axios.post(`/api/change/${view}`);\n}\n\nexport const getVideosList = () => axios.get('/api/videos/list').then(res => res.data);","import React from 'react';\nimport { IconButton, Text, ScaleFade, useDisclosure, Button, Spinner } from '@chakra-ui/react';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport { AiOutlineClockCircle, AiFillVideoCamera } from 'react-icons/ai';\nimport { RiGhost2Fill } from 'react-icons/ri';\nimport { TiWeatherPartlySunny } from 'react-icons/ti';\nimport { FaDigitalTachograph } from 'react-icons/fa';\n\nimport { useIsDay } from '../../hooks/index';\nimport { useGlobalState } from '../../providers/index';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport { getVideosList } from '../../api';\nimport { useQuery } from 'react-query';\n\nconst capitalizeFirstLetter = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1).replace('.mp4', '');\n}\n\nexport const Controller = (props: { socket: any }) => {\n    const { isLoading, data }: any = useQuery('videos', () => getVideosList());\n\n    const isDay = useIsDay();\n    const global = useGlobalState();\n    const history = useHistory();\n\n    const { isOpen, onToggle } = useDisclosure();\n\n    const handleIsOpen = (route: string) => {\n        onToggle();\n        setTimeout(() => {\n            history.push(route);\n        }, 500);\n    }\n\n    React.useLayoutEffect(() => {\n        onToggle();\n    }, [])\n\n    if (global.device === null) {\n        return <Redirect to=\"/device\" />\n    }\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    return (\n        <ScaleFade initialScale={0.9} in={isOpen}>\n            <Box display=\"flex\" flexDir=\"column\" minW={300} >\n                <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Controller</Text>\n                <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Change the view on the frame</Text>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"flex-start\">\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'clock') : handleIsOpen('/clock')}\n                        m={1}\n                        colorScheme=\"gray\"\n                        isFullWidth\n                        icon={<AiOutlineClockCircle />}\n                    />\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'weather') : handleIsOpen('/weather')}\n                        m={1} colorScheme=\"gray\" isFullWidth icon={<TiWeatherPartlySunny />}\n                    />\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'digital-clock') : handleIsOpen('/digital-clock')}\n                        m={1} colorScheme=\"gray\" isFullWidth icon={<FaDigitalTachograph />}\n                    />\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'holiday') : handleIsOpen('/holiday')}\n                        m={1} colorScheme=\"gray\" isFullWidth icon={<RiGhost2Fill />}\n                    />\n                </Box>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} mt={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"flex-start\">\n                    {data.map((item: any) => (\n                        <Button\n                            aria-label=\"clock\"\n                            maxW=\"30%\"\n                            minH=\"90px\"\n                            fontSize=\"4xl\"\n                            onClick={() => global.device === 'controller' ? props.socket.emit('change', `videos/${item}`) : handleIsOpen(`videos/${item}`)}\n                            m={1} colorScheme=\"gray\" isFullWidth\n                        >\n                            <Box display=\"flex-column\" alignItems=\"center\" justifyContent=\"center\">\n                                <AiFillVideoCamera />\n                                <Text fontSize=\"small\">{capitalizeFirstLetter(item)}</Text>\n                            </Box>\n                        </Button>\n                    ))}\n                </Box>\n            </Box>\n        </ScaleFade>\n    )\n}","import { getVideosList } from \"../../api\";\nimport {\n    useQuery,\n} from 'react-query'\nimport { Spinner } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router\";\n\nexport const Video = () => {\n    const { isLoading, data } = useQuery('videos', () => getVideosList());\n    const { name }: any = useParams();\n    if (isLoading) {\n        return <Spinner size=\"xl\" />\n    }\n    console.log(data)\n    return (\n        <video style={{ overflow: 'hidden !important' }} id=\"videoPlayer\" autoPlay controls={false} width=\"100%\" loop muted playsInline>\n            <source src={`/videos/${name}`} type=\"video/mp4\" />\n            Sorry, your browser doesn't support embedded videos.\n        </video>\n    )\n}","import { Box, IconButton, Text } from '@chakra-ui/react';\nimport { AiOutlinePicture } from 'react-icons/ai';\nimport { GiRetroController } from 'react-icons/gi';\nimport { useHistory } from 'react-router-dom';\nimport { useGlobalState } from '../../providers/index';\nimport { useIsDay } from '../../hooks/index';\nimport { Divider } from '@chakra-ui/layout';\n\nexport const Device = () => {\n    const { device, setDevice } = useGlobalState();\n    const history = useHistory();\n    const isDay = useIsDay();\n\n    return (\n        <Box color=\"white\" flexWrap=\"wrap\" display=\"flex\" minW={300} flexDir=\"column\">\n            <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Device</Text>\n            <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Choose if this is the frame or the controller</Text>\n            <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n            <IconButton\n                onClick={() => {\n                    setDevice('frame')\n                    localStorage.setItem('device', 'frame');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" colorScheme=\"red\" aria-label=\"frame\" minW=\"47%\" minH=\"240px\" m={1} icon={<AiOutlinePicture />}\n            />\n            <IconButton\n                onClick={() => {\n                    setDevice('controller')\n                    localStorage.setItem('device', 'controller');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" colorScheme=\"red\" aria-label=\"controller\" minW=\"47%\" minH=\"240px\" m={1} icon={<GiRetroController />}\n            />\n        </Box>\n    )\n}","import { Box } from '@chakra-ui/layout';\nimport { Text } from '@chakra-ui/react';\nimport CountUp from 'react-countup';\nimport { useIsDay } from '../../hooks';\n\nconst daysOfTheWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const Future = (props: {\n    forcast: {\n        main: any;\n        weather: any;\n        dt_txt: string;\n    };\n}) => {\n    const isDay = useIsDay();\n    const forcastTime = new Date(props.forcast.dt_txt);\n    const { main } = props.forcast;\n    const [current] = props.forcast.weather;\n    return (\n        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" padding=\"1em\" margin=\"1em\" borderRadius=\"1em\">\n            <img style={{ maxWidth: '6em' }} alt=\"weather icon\" src={`https://openweathermap.org/img/wn/${current.icon}@4x.png`} />\n            <Text letterSpacing=\"0px\" fontFamily=\"'Anonymous Pro', monospace\" fontWeight=\"300\" fontSize=\"5em\" color={isDay ? \"black\" : \"white\"}>\n                <CountUp useEasing duration=\"5\" start={main.temp - 10} end={main.temp} />°\n            </Text>\n            <Text fontWeight=\"300\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>\n                {daysOfTheWeek[forcastTime.getDay()]}\n            </Text>\n        </Box>\n    )\n}","import { Box } from '@chakra-ui/layout';\nimport { Fade, Text } from '@chakra-ui/react';\n\nimport React from 'react';\nimport { useIsDay } from '../../hooks/index';\n\nexport const DigitalClock = (props: { fontSize?: string }) => {\n    const isDay = useIsDay();\n    let now = new Date();\n    const [time, setTime] = React.useState(now.toLocaleTimeString());\n    React.useLayoutEffect(() => {\n        const getTime = () => {\n            setTimeout(() => {\n                setTime(new Date().toLocaleTimeString());\n                getTime();\n            }, 1000);\n        }\n        getTime();\n    }, [])\n    return (\n        <Fade in>\n            <Box>\n                <Text fontFamily=\"'Roboto Mono', monospace\" fontSize={props.fontSize || \"8em\"} color={isDay ? 'black' : 'white'}>{time}</Text>\n            </Box>\n        </Fade>\n    )\n}","/* eslint-disable array-callback-return */\nimport { ScaleFade, Spinner, Text } from '@chakra-ui/react';\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport React from 'react';\nimport axios from 'axios';\nimport { useIsDay } from '../../hooks/index';\nimport { Future } from './Future';\nimport CountUp from 'react-countup';\nimport { DigitalClock } from '../DigitalClock';\n\nexport const Weather = () => {\n    const isDay = useIsDay();\n\n    const [weather, setWeather] = React.useState({\n        main: {\n            temp: 0,\n            humidity: 0,\n            feels_like: 0,\n        },\n        name: '',\n        wind: {\n            speed: 0,\n            deg: 0,\n        },\n        weather: [{\n            icon: '',\n            description: '',\n            main: '',\n        }],\n    });\n    const [forcast, setForcast] = React.useState({\n        list: []\n    });\n\n    const [loading, setloading] = React.useState(true);\n    const [previousTemp, setPreviousTemp]: any = React.useState();\n\n    React.useLayoutEffect(() => {\n        const getForcast = async (lat: number, long: number) => {\n            const fcast = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`);\n            setForcast(fcast.data);\n            setloading(false);\n        }\n        const getWeather = async () => {\n            const result: any = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            getForcast(result.data.coord.lat, result.data!.coord.lon);\n            setWeather(result.data);\n            setPreviousTemp(weather.main.temp);\n        }\n        getWeather();\n    }, []);\n\n    React.useLayoutEffect(() => {\n        const getForcast = async (lat: number, long: number) => {\n            const fcast = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`);\n            setForcast(fcast.data);\n            console.log(fcast.data);\n        }\n        const getWeather = async () => {\n            const result: any = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            console.log(result.data);\n            getForcast(result.data.coord.lat, result.data!.coord.lon);\n            setWeather(result.data);\n            setTimeout(() => {\n                getWeather();\n            }, 60000);\n        }\n        getWeather();\n    }, []);\n    const today = new Date();\n    const [current] = weather.weather;\n\n    const fiveDayForcast: any = [];\n    forcast.list.map((item: any) => {\n        if (item.dt_txt.includes(\"15:00:00\")) {\n            fiveDayForcast.push(item)\n        }\n    }, [])\n\n    if (loading) {\n        return <><Spinner size=\"xl\" /></>\n    }\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\">\n                <Box display=\"flex\" flexDir=\"row\" alignItems=\"center\">\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box pl={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <DigitalClock fontSize=\"5em\" />\n                        </Box>\n                        <Divider marginBottom=\"10\" mt={16} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                        <Box p={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <Text lineHeight=\"40px\" fontWeight=\"400\" fontSize=\"6em\" color={isDay ? \"black\" : \"white\"}>{weather.name}</Text>\n                        </Box>\n                        <Box p={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <Text lineHeight=\"50px\" fontWeight=\"300\" fontSize=\"2.5em\" color={isDay ? \"black\" : \"white\"}>{today.toDateString()}</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Divider orientation=\"vertical\" mt={16} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                    <Box flexGrow={1} />\n                    <Box>\n                        <Box display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <img alt=\"weather icon\" src={`https://openweathermap.org/img/wn/${current.icon}@4x.png`} />\n                        </Box>\n                    </Box>\n                </Box>\n                <Divider mt={5} mb={5} opacity={isDay ? 0.6 : 0.5} />\n                <Box display=\"flex\" flexDir=\"row\">\n                    <Box pt={5} display=\"flex\" justifyContent='flex-start' alignItems='flex-start' flexDir='column'>\n                        <Text letterSpacing=\"-10px\" fontFamily=\"'Anonymous Pro', monospace\" lineHeight=\"0.9em\" fontWeight=\"100\" fontSize=\"14em\" color={isDay ? \"black\" : \"white\"}>\n                            <CountUp useEasing duration=\"6\" start={previousTemp || weather.main.temp - 10} end={weather.main.temp} />°\n                        </Text>\n                        <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>{current.description}</Text>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Divider orientation=\"vertical\" />\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box display=\"flex\" justifyContent='flex-end' alignItems='center' flexDir='column'>\n                            <Text fontFamily=\"'Anonymous Pro', monospace\" lineHeight=\"60px\" fontWeight=\"400\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.main.humidity}%</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Humidity</Text>\n                        </Box>\n                        <Box flexGrow={1} />\n                        <Divider mt={2} mb={2} />\n                        <Box flexGrow={1} />\n                        <Box display=\"flex\" justifyContent='flex-end' alignItems='center' flexDir='column'>\n                            <Text fontFamily=\"'Anonymous Pro', monospace\" lineHeight=\"60px\" fontWeight=\"400\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.main.feels_like.toFixed(0)}°</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Feels Like</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                        <BsFillArrowUpCircleFill color={isDay ? \"black\" : \"white\"} fontSize=\"72px\" style={{ transform: `rotate(${weather.wind.deg}deg)`, transition: 'transform 1250ms ease-in-out' }} />\n                        <Text lineHeight=\"60px\" fontWeight=\"200\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.wind.speed}mph</Text>\n                        <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Wind</Text>\n                    </Box>\n                    <Box flexGrow={1} />\n\n                </Box>\n                <Divider mt={12} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                <Box display=\"flex\" justifyContent='flex-start' alignItems='flex-start' flexDir='row' width=\"100%\">\n                    {fiveDayForcast.map((item: any, index: any) => {\n                        if (index < 4) {\n                            return (\n                                <>\n                                    <Box flexGrow={1} />\n                                    <Future forcast={item} />\n                                    <Box flexGrow={1} />\n                                </>\n                            )\n                        }\n                        return null\n                    })}\n                </Box>\n            </Box>\n        </ScaleFade>\n    );\n}","import { Text } from '@chakra-ui/react';\nimport { Box } from '@chakra-ui/layout';\nimport { useIsDay } from '../hooks';\nimport Lottie from 'react-lottie';\nimport HALLOWEEN from './halloween.json';\n\nexport const Holiday = () => {\n    const isDay = useIsDay();\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: HALLOWEEN,\n    };\n\n    return (\n        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" lineHeight=\"10em\">\n            <Text color=\"#ff7b00\" fontSize=\"6em\" fontFamily=\"'Festive', cursive\">Happy</Text>\n            <Text color=\"#ff7b00\" fontSize=\"14em\" fontFamily=\"'Festive', cursive\">Halloween</Text>\n            <Box mt=\"5em\">\n                <Lottie\n                    options={defaultOptions}\n                    height={400}\n                    width={700}\n                />\n            </Box>\n        </Box>\n    )\n}","import React from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { Clock } from '../components/Clock/index';\nimport { Controller } from '../components/Controller';\nimport { Video } from '../components/Video/index';\nimport { Device } from '../components/Device/index';\nimport { Weather } from '../components/Weather';\nimport { DigitalClock } from '../components/DigitalClock/index';\nimport { useTimeOfDay } from '../hooks';\nimport { Holiday } from '../Holiday';\n\nexport const Routes = (props: { socket: any, device: string }) => {\n    const timeOfDay = useTimeOfDay();\n    const history = useHistory();\n    // if(timeOfDay === 7){\n    //     history.push('/weather')\n    // }\n    // if(timeOfDay === 21){\n    //     history.push('/digital-clock')\n    // }\n    return (\n        <Switch>\n            <Route path=\"/weather\">\n                <Weather />\n            </Route>\n            <Route path=\"/clock\">\n                <Clock />\n            </Route>\n            <Route path=\"/digital-clock\">\n                <DigitalClock />\n            </Route>\n            <Route path=\"/videos/:name\">\n                <Video />\n            </Route>\n            <Route path=\"/controller\">\n                <Controller socket={props.socket} />\n            </Route>\n            <Route path=\"/device\">\n                <Device />\n            </Route>\n            <Route path=\"/holiday\">\n                <Holiday />\n            </Route>\n            <Route path=\"/*\">\n                <Redirect to=\"/controller\" />\n            </Route>\n        </Switch>\n    )\n}","import './App.css';\nimport React from 'react';\nimport { Box, IconButton } from '@chakra-ui/react';\nimport { Routes } from './routes';\nimport { useIsDay } from './hooks/index';\nimport { CgController } from 'react-icons/cg';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport { io } from \"socket.io-client\";\nimport { Provider } from './providers';\nimport { IoIosRefresh } from 'react-icons/io';\n\nconst socket = io('http://192.168.124.124:4000');\n\nconst App = () => {\n  const isDay = useIsDay();\n  const histroy = useHistory();\n  const location = useLocation();\n  const [device, setDevice] = React.useState(localStorage.getItem('device'));\n\n  const getBackgroundColor = () => {\n    if(location.pathname.includes('holiday')){\n      return 'black'\n    }\n    return isDay ? '#fff' : '#000'\n  }\n\n  React.useEffect(() => {\n    socket.on(\"change_view\", (view) => {\n      console.log(view)\n      if (device === 'frame') {\n        if (view === 'reload') {\n          window.location.reload();\n        }\n        histroy.push(`/${view}`);\n      }\n    });\n  }, []);\n\n  return (\n    <Provider socket={socket} device={device} setDevice={setDevice}>\n      <Box\n        height={window.innerHeight}\n        width={window.innerWidth}\n        display=\"flex\"\n        alignItems={isMobile ? \"flex-start\" : \"center\"}\n        justifyContent='center'\n        style={{\n          backgroundColor: getBackgroundColor(),\n        }}\n        pt={isMobile && 8}\n      >\n        <Routes socket={socket} device={device} />\n        <Link to=\"/controller\">\n          <IconButton colorScheme=\"gray\" size=\"lg\" icon={<CgController />} style={{\n            position: 'fixed',\n            bottom: 0,\n            right: 0,\n            borderRadius: '5px 0px 0px',\n            minHeight: 70,\n            minWidth: 70\n          }} />\n        </Link>\n        <IconButton colorScheme=\"gray\" size=\"lg\" icon={<IoIosRefresh />} style={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          borderRadius: '0px 5px 0px 0px',\n          minHeight: 70,\n          minWidth: 70,\n        }}\n          onClick={() => device === 'controller' ? socket.emit('change', 'refresh') : window.location.reload(true)}\n\n        />\n      </Box>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from 'react-query';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider>\n        <Router>\n          <App />\n        </Router>\n      </ChakraProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}