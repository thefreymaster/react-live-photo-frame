{"version":3,"sources":["hooks/index.tsx","components/Clock/index.tsx","providers/index.tsx","components/Controller/index.tsx","components/Video/index.tsx","components/Device/index.tsx","components/Weather/index.tsx","routes/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["useIsDay","Date","getHours","Clock","isDay","theme","background","center","seconds","minutes","hour","tick","smallTickWidth","largeTickWidth","secondHandWidth","minuteHandWidth","hourHandWidth","initialScale","in","Context","React","createContext","value","socket","emit","view","data","device","setDevice","s","useGlobalState","useContext","Provider","props","children","Controller","global","history","useHistory","useDisclosure","isOpen","onToggle","handleIsOpen","route","setTimeout","push","useLayoutEffect","to","display","flexDir","minW","color","fontSize","fontWeight","marginBottom","flexWrap","justifyContent","maxW","minH","onClick","m","colorScheme","isFullWidth","icon","Video","id","autoPlay","controls","width","loop","muted","playsInline","src","type","Device","localStorage","setItem","Weather","useState","main","temp","humidity","name","wind","speed","deg","weather","setWeather","loading","setloading","getWeather","a","axios","get","process","result","console","log","p","alignItems","lineHeight","toFixed","style","marginLeft","transform","transition","Routes","path","io","App","histroy","getItem","useEffect","on","changeRoute","height","window","innerHeight","innerWidth","isMobile","backgroundColor","pt","position","bottom","right","borderRadius","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.771f85d4.chunk.js","sourcesContent":["export const useIsDay = () => {\n    if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n        return true\n    }\n    return false;\n}","import { ScaleFade } from '@chakra-ui/react';\nimport React from 'react';\nimport AnalogClock from 'react-analog-clock';\nimport { useIsDay } from '../../hooks/index';\n\nexport const Clock = () => {\n    const isDay = useIsDay();\n    const theme = {\n        background: isDay ? '#fff' : '#000',\n        center: isDay ? '#000' : '#fff',\n        seconds: isDay ? '#000' : '#fff',\n        minutes: isDay ? '#000' : '#fff',\n        hour: isDay ? '#000' : '#fff',\n        tick: isDay ? '#000' : '#fff',\n        smallTickWidth: 2,\n        largeTickWidth: 4,\n        secondHandWidth: 3,\n        minuteHandWidth: 6,\n        hourHandWidth: 8,\n    };\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <AnalogClock theme={theme} />\n        </ScaleFade>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext({\n    value: {},\n    socket: {\n        emit: (view: string, data: any) => { }\n    },\n    device: 'frame',\n    setDevice: (s: string) => {}\n});\n\nexport const useGlobalState = () => React.useContext(Context);\n\nexport const Provider = (props: { children: React.ReactNode, value: any }) => {\n    return (\n        <Context.Provider value={{ ...props as any }}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import React from 'react';\nimport { IconButton, Text, ScaleFade, useDisclosure } from '@chakra-ui/react';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport { AiOutlineClockCircle, AiFillVideoCamera } from 'react-icons/ai';\nimport { TiWeatherPartlySunny } from 'react-icons/ti';\nimport { useIsDay } from '../../hooks/index';\nimport { useGlobalState } from '../../providers/index';\nimport { useHistory, Redirect } from 'react-router-dom';\n\nexport const Controller = (props: { socket: any }) => {\n    const isDay = useIsDay();\n    const global = useGlobalState();\n    const history = useHistory();\n\n    const { isOpen, onToggle } = useDisclosure();\n\n    const handleIsOpen = (route: string) => {\n        onToggle();\n        setTimeout(() => {\n            history.push(route);\n        }, 500);\n    }\n\n    React.useLayoutEffect(() => {\n        onToggle();\n    }, [])\n\n    if (global.device === null) {\n        return <Redirect to=\"/device\" />\n    }\n\n    return (\n        <ScaleFade initialScale={0.9} in={isOpen}>\n            <Box display=\"flex\" flexDir=\"column\" minW={300} >\n                <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Controller</Text>\n                <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Change the view on the frame</Text>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"center\">\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'clock') : handleIsOpen('/clock')}\n                        m={1}\n                        colorScheme=\"red\"\n                        isFullWidth\n                        icon={<AiOutlineClockCircle />}\n                    />\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'weather') : handleIsOpen('/weather')}\n                        m={1} colorScheme=\"red\" isFullWidth icon={<TiWeatherPartlySunny />}\n                    />\n                    <IconButton\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'videos') : handleIsOpen('/videos')}\n                        m={1} colorScheme=\"red\" isFullWidth icon={<AiFillVideoCamera />}\n                    />\n                </Box>\n            </Box>\n        </ScaleFade>\n    )\n}","\nexport const Video = () => {\n    return (\n        <video id=\"videoPlayer\" autoPlay controls={false} width=\"100%\" loop muted playsInline>\n            <source src=\"/videos/troy.MOV\" type=\"video/mp4\" />\n            Sorry, your browser doesn't support embedded videos.\n        </video>\n    )\n}","import { Box, IconButton, Text } from '@chakra-ui/react';\nimport { AiOutlinePicture } from 'react-icons/ai';\nimport { GiRetroController } from 'react-icons/gi';\nimport { useHistory } from 'react-router-dom';\nimport { useGlobalState } from '../../providers/index';\nimport { useIsDay } from '../../hooks/index';\nimport { Divider } from '@chakra-ui/layout';\n\nexport const Device = () => {\n    const { device, setDevice } = useGlobalState();\n    const history = useHistory();\n    const isDay = useIsDay();\n\n    return (\n        <Box color=\"white\" flexWrap=\"wrap\" display=\"flex\" minW={300} flexDir=\"column\">\n            <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Device</Text>\n            <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Choose if this is the frame or the controller</Text>\n            <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n            <IconButton\n                onClick={() => {\n                    setDevice('frame')\n                    localStorage.setItem('device', 'frame');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" colorScheme=\"red\" aria-label=\"frame\" minW=\"47%\" minH=\"240px\" m={1} icon={<AiOutlinePicture />}\n            />\n            <IconButton\n                onClick={() => {\n                    setDevice('controller')\n                    localStorage.setItem('device', 'controller');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" colorScheme=\"red\" aria-label=\"controller\" minW=\"47%\" minH=\"240px\" m={1} icon={<GiRetroController />}\n            />\n        </Box>\n    )\n}","import { ScaleFade, Text, useDisclosure } from '@chakra-ui/react';\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\nimport { Box } from '@chakra-ui/layout';\nimport React from 'react';\nimport axios from 'axios';\n\nexport const Weather = () => {\n    const { isOpen } = useDisclosure();\n\n    const [weather, setWeather] = React.useState({\n        main: {\n            temp: 0,\n            humidity: 0,\n        },\n        name: '',\n        wind: {\n            speed: 0,\n            deg: 0,\n        }\n    });\n    const [loading, setloading] = React.useState(true);\n\n    React.useLayoutEffect(() => {\n        setloading(true)\n        const getWeather = async () => {\n            const result = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            console.log(result.data)\n            setWeather(result.data);\n            setloading(false);\n            setTimeout(() => {\n                setloading(true);\n                getWeather();\n            }, 300000);\n        }\n        getWeather();\n    }, [])\n\n    if (loading) {\n        return <>\"Loading\"</>\n    }\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\">\n                <Box p={10} display=\"flex\" justifyContent='center' alignItems='center'>\n                    <Text lineHeight=\"150px\" fontWeight=\"100\" fontSize=\"300px\" color=\"white\">{weather.main.temp.toFixed(0)}</Text>\n                </Box>\n                <Box p={10} display=\"flex\" justifyContent='center' alignItems='center'>\n                    <Text lineHeight=\"40px\" fontWeight=\"100\" fontSize=\"70px\" color=\"white\">{weather.name}</Text>\n                </Box>\n                <Box p={10} display=\"flex\" justifyContent='center' alignItems='flex-start' flexDir=\"row\">\n                    <Box p={10} display=\"flex\" justifyContent='center' alignItems='flex-start' flexDir=\"column\">\n                        <Text lineHeight=\"60px\" fontWeight=\"100\" fontSize=\"100px\" color=\"white\">{weather.main.humidity.toFixed(0)}%</Text>\n                        <Text fontWeight=\"100\" fontSize=\"40px\" color=\"white\">HUMIDITY</Text>\n                    </Box>\n                    <Box p={10} display=\"flex\" justifyContent='center' alignItems='flex-start' flexDir=\"column\">\n                        <Box display=\"flex\" flexDir=\"row\">\n                            <Text lineHeight=\"60px\" fontWeight=\"100\" fontSize=\"100px\" color=\"white\">{weather.wind.speed}mph</Text>\n                            <BsFillArrowUpCircleFill color=\"#fff\" fontSize=\"72px\" style={{ marginLeft: 20, transform: `rotate(${weather.wind.deg}deg)`, transition: 'transform 1250ms ease-in-out' }} />\n                        </Box>\n                        <Text fontWeight=\"100\" fontSize=\"40px\" color=\"white\">WIND</Text>\n                    </Box>\n                </Box>\n\n            </Box>\n        </ScaleFade>\n    );\n}","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Clock } from '../components/Clock/index';\nimport { Controller } from '../components/Controller';\nimport { Video } from '../components/Video/index';\nimport { Device } from '../components/Device/index';\nimport { Weather } from '../components/Weather';\n\nexport const Routes = (props: { socket: any, device: string }) => {\n    return (\n        <Switch>\n            <Route path=\"/weather\">\n                <Weather />\n            </Route>\n            <Route path=\"/clock\">\n                <Clock />\n            </Route>\n            <Route path=\"/videos\">\n                <Video />\n            </Route>\n            <Route path=\"/controller\">\n                <Controller socket={props.socket} />\n            </Route>\n            <Route path=\"/device\">\n                <Device />\n            </Route>\n            <Route path=\"/*\">\n                <Redirect to=\"/controller\" />\n            </Route>\n        </Switch>\n    )\n}","import './App.css';\nimport React from 'react';\nimport { Box, IconButton } from '@chakra-ui/react';\nimport { Routes } from './routes';\nimport { useIsDay } from './hooks/index';\nimport { CgController } from 'react-icons/cg';\nimport { Link, useHistory } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport { io } from \"socket.io-client\";\nimport { Provider } from './providers';\n\nconst socket = io('http://192.168.124.124:4000');\n\nconst App = () => {\n  const isDay = useIsDay();\n  const histroy = useHistory();\n  const [device, setDevice] = React.useState(localStorage.getItem('device'))\n\n  const changeRoute = (view) => {\n    switch (view) {\n      case 'videos':\n        histroy.push('/videos');\n        break;\n      case 'weather':\n        histroy.push('/weather');\n        break;\n      case 'clock':\n        histroy.push('/clock');\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  React.useEffect(() => {\n    socket.on(\"change_view\", (view) => {\n      console.log(view)\n      if (device === 'frame') {\n        changeRoute(view);\n      }\n    });\n  }, []);\n\n  return (\n    <Provider socket={socket} device={device} setDevice={setDevice}>\n      <Box\n        height={window.innerHeight}\n        width={window.innerWidth}\n        display=\"flex\"\n        alignItems={isMobile ? \"flex-start\" : \"center\"}\n        justifyContent='center'\n        style={{\n          backgroundColor: isDay ? '#fff' : '#000'\n        }}\n        pt={isMobile && 8}\n      >\n        <Routes socket={socket} device={device} />\n        <Link to=\"/controller\">\n          <IconButton colorScheme=\"red\" icon={<CgController />} style={{\n            position: 'fixed',\n            bottom: 0,\n            right: 0,\n            borderRadius: '5px 0px 0px'\n          }} />\n        </Link>\n      </Box>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <Router>\n        <App />\n      </Router>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}