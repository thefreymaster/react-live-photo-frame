{"version":3,"sources":["hooks/index.tsx","components/DigitalClock/index.tsx","components/Clock/index.tsx","providers/index.tsx","api/index.ts","components/Controller/index.tsx","components/Video/index.tsx","components/Device/index.tsx","constants.js","components/Weather/Future.tsx","components/Weather/index.tsx","Holiday/index.tsx","components/DigitalTime/index.tsx","components/Announcement/index.tsx","routes/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["useIsDay","React","useState","Date","getHours","isDay","setIsDay","useLayoutEffect","checkTimeOfDay","setTimeout","DigitalClock","props","history","useHistory","console","log","now","toLocaleTimeString","time","setTime","getTime","includes","push","location","pathname","hideTime","in","fontFamily","fontSize","color","Clock","theme","background","center","seconds","minutes","hour","tick","smallTickWidth","largeTickWidth","secondHandWidth","minuteHandWidth","hourHandWidth","initialScale","Context","createContext","value","socket","emit","view","data","device","setDevice","s","useGlobalState","useContext","Provider","children","getVideosList","axios","get","then","res","Controller","useQuery","isLoading","global","useDisclosure","isOpen","onToggle","handleIsOpen","route","to","display","flexDir","minW","fontWeight","marginBottom","flexWrap","justifyContent","maxW","minH","onClick","m","colorScheme","isFullWidth","alignItems","mt","map","item","replace","string","charAt","toUpperCase","slice","Video","name","useParams","size","style","overflow","filter","WebkitFilter","id","autoPlay","controls","width","loop","muted","playsInline","src","type","Device","localStorage","setItem","DEFAULT_MONO_FONT","daysOfTheWeek","Future","today","temp","forcast","current","weather","padding","margin","borderRadius","getDay","index","maxWidth","alt","icon","max","toFixed","orientation","marginLeft","min","main","Weather","wind","speed","deg","description","humidity","feels_like","wind_deg","wind_speed","wind_gust","daily","city","loading","setWeather","getWeather","a","process","coord","lat","lon","liveWeather","alerts","todaysWeather","pl","mb","opacity","p","lineHeight","toDateString","flexGrow","pb","alert","mr","event","pt","letterSpacing","transform","transition","Holiday","defaultOptions","autoplay","animationData","HOLIDAY","options","height","DigitalTime","hideSeconds","minute","Announcement","previous","Routes","timeOfDay","useTimeOfDay","path","io","App","histroy","useLocation","getItem","useEffect","on","window","reload","innerHeight","innerWidth","isMobile","backgroundColor","position","bottom","right","minHeight","minWidth","left","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.43c597cd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const useIsDay = () => {\n    const [isDay, setIsDay] = React.useState(new Date().getHours() >= 6 && new Date().getHours() <= 17);\n\n    React.useLayoutEffect(() => {\n        const checkTimeOfDay = () => {\n            if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n                setIsDay(true);\n            }\n            else {\n                setIsDay(false);\n            }\n            setTimeout(() => {\n                checkTimeOfDay();\n            }, 300000);\n        }\n        checkTimeOfDay();\n    }, []);\n\n    // if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n    //     return true\n    // }\n    return isDay;\n}\n\nexport const useTimeOfDay = () => {\n    const [timeOfDay, setTimeOfDay] = React.useState(new Date().getHours());\n    console.log(timeOfDay)\n    React.useLayoutEffect(() => {\n        const checkTimeOfDay = () => {\n            setTimeOfDay(new Date().getHours())\n            setTimeout(() => {\n                checkTimeOfDay();\n            }, 36000000);\n        }\n    }, [])\n\n    return timeOfDay;\n}","import { Box } from '@chakra-ui/layout';\nimport { Fade, Text } from '@chakra-ui/react';\n\nimport React from 'react';\nimport { useIsDay } from '../../hooks/index';\nimport { useHistory } from 'react-router-dom';\n\nexport const DigitalClock = (props: { fontSize?: string, hideTime?: boolean }) => {\n    const history = useHistory();\n    console.log(history)\n    const isDay = useIsDay();\n    let now = new Date();\n    const [time, setTime] = React.useState(now.toLocaleTimeString());\n    React.useLayoutEffect(() => {\n        const getTime = () => {\n            setTimeout(() => {\n                if (new Date().toLocaleTimeString().includes(':00:00')) {\n                    history.push(`/announcement${history.location.pathname}`)\n                }\n                else {\n                    setTime(new Date().toLocaleTimeString());\n                    getTime();\n                }\n            }, 1000);\n        }\n        getTime();\n    }, []);\n\n    if(props.hideTime){\n        return <></>;\n    }\n    return (\n        <Fade in>\n            <Box>\n                <Text fontFamily=\"'Roboto Mono', monospace\" fontSize={props.fontSize || \"8em\"} color={isDay ? 'black' : 'white'}>{time}</Text>\n            </Box>\n        </Fade>\n    )\n}","import { ScaleFade } from '@chakra-ui/react';\nimport React from 'react';\nimport AnalogClock from 'react-analog-clock';\nimport { useIsDay } from '../../hooks/index';\nimport { DigitalClock } from '../DigitalClock';\n\nexport const Clock = () => {\n    const isDay = useIsDay();\n    const theme = {\n        background: isDay ? '#fff' : '#000',\n        center: isDay ? '#000' : '#fff',\n        seconds: isDay ? '#000' : '#fff',\n        minutes: isDay ? '#000' : '#fff',\n        hour: isDay ? '#000' : '#fff',\n        tick: isDay ? '#000' : '#fff',\n        smallTickWidth: 2,\n        largeTickWidth: 4,\n        secondHandWidth: 3,\n        minuteHandWidth: 6,\n        hourHandWidth: 8,\n    };\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <AnalogClock theme={theme} />\n            <DigitalClock hideTime />\n        </ScaleFade>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext({\n    value: {},\n    socket: {\n        emit: (view: string, data: any) => { }\n    },\n    device: 'frame',\n    setDevice: (s: string) => {}\n});\n\nexport const useGlobalState = () => React.useContext(Context);\n\nexport const Provider = (props: { children: React.ReactNode, value: any }) => {\n    return (\n        <Context.Provider value={{ ...props as any }}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import axios from \"axios\"\n\nexport const changeView = async (view: string) => {\n    await axios.post(`/api/change/${view}`);\n}\n\nexport const getVideosList = () => axios.get('/api/videos/list').then(res => res.data);","import React from 'react';\nimport { IconButton, Text, ScaleFade, useDisclosure, Button, Spinner } from '@chakra-ui/react';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport { AiOutlineClockCircle, AiFillVideoCamera } from 'react-icons/ai';\nimport { TiWeatherPartlySunny } from 'react-icons/ti';\nimport { FaDigitalTachograph } from 'react-icons/fa';\n\nimport { useIsDay } from '../../hooks/index';\nimport { useGlobalState } from '../../providers/index';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport { getVideosList } from '../../api';\nimport { useQuery } from 'react-query';\nimport { GiOakLeaf } from 'react-icons/gi';\n\nconst capitalizeFirstLetter = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1).replace('.mp4', '');\n}\n\nexport const Controller = (props: { socket: any }) => {\n    const { isLoading, data }: any = useQuery('videos', () => getVideosList());\n\n    const isDay = useIsDay();\n    const global = useGlobalState();\n    const history = useHistory();\n\n    const { isOpen, onToggle } = useDisclosure();\n\n    const handleIsOpen = (route: string) => {\n        onToggle();\n        setTimeout(() => {\n            history.push(route);\n        }, 500);\n    }\n\n    React.useLayoutEffect(() => {\n        onToggle();\n    }, [])\n\n    if (global.device === null) {\n        return <Redirect to=\"/device\" />\n    }\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    return (\n        <ScaleFade initialScale={0.9} in={isOpen}>\n            <Box display=\"flex\" flexDir=\"column\" minW={300} >\n                <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Controller</Text>\n                <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Change the view on the frame</Text>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"flex-start\">\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'clock') : handleIsOpen('/clock')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <AiOutlineClockCircle />\n                            <Text fontSize=\"xs\" mt=\"1\">Analog</Text>\n                        </Box>\n                    </Button>\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'weather') : handleIsOpen('/weather')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <TiWeatherPartlySunny />\n                            <Text fontSize=\"xs\" mt=\"1\">Weather</Text>\n                        </Box>\n                    </Button>\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'digital-clock') : handleIsOpen('/digital-clock')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <FaDigitalTachograph />\n                            <Text fontSize=\"xs\" mt=\"1\">Digital</Text>\n                        </Box>\n                    </Button>\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'holiday') : handleIsOpen('/holiday')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <GiOakLeaf />\n                            <Text fontSize=\"xs\" mt=\"1\">Holiday</Text>\n                        </Box>\n                    </Button>\n                </Box>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} mt={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"flex-start\">\n                    {data.map((item: any) => (\n                        <Button\n                            aria-label=\"clock\"\n                            maxW=\"30%\"\n                            minH=\"90px\"\n                            fontSize=\"4xl\"\n                            onClick={() => global.device === 'controller' ? props.socket.emit('change', `videos/${item.replace('.mp4', '')}`) : handleIsOpen(`videos/${item.replace('.mp4', '')}`)}\n                            m={1} \n                            colorScheme=\"gray\" \n                            isFullWidth\n                            key={item}\n                        >\n                            <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                                <AiFillVideoCamera />\n                                <Text fontSize=\"small\">{capitalizeFirstLetter(item)}</Text>\n                            </Box>\n                        </Button>\n                    ))}\n                </Box>\n            </Box>\n        </ScaleFade>\n    )\n}","import { getVideosList } from \"../../api\";\nimport {\n    useQuery,\n} from 'react-query'\nimport { Spinner } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router\";\n\nexport const Video = () => {\n    const { name }: any = useParams();\n    const { isLoading, data } = useQuery(['videos', name], () => getVideosList());\n    if (isLoading) {\n        return <Spinner size=\"xl\" />\n    }\n    console.log(data)\n    return (\n        <video style={{ overflow: 'hidden !important', filter: 'sepia(100%)', WebkitFilter: 'sepia(100%)' }} id=\"videoPlayer\" autoPlay controls={false} width=\"100%\" loop muted playsInline>\n            <source src={`/videos/${name}.mp4`} type=\"video/mp4\" />\n            Sorry, your browser doesn't support embedded videos.\n        </video>\n    )\n}","import { Box, Button, ScaleFade, Text } from '@chakra-ui/react';\nimport { AiOutlinePicture } from 'react-icons/ai';\nimport { GiRetroController } from 'react-icons/gi';\nimport { useHistory } from 'react-router-dom';\nimport { useGlobalState } from '../../providers/index';\nimport { useIsDay } from '../../hooks/index';\nimport { Divider } from '@chakra-ui/layout';\n\nexport const Device = () => {\n    const { setDevice } = useGlobalState();\n    const history = useHistory();\n    const isDay = useIsDay();\n\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box color=\"white\" flexWrap=\"wrap\" display=\"flex\" minW={300} flexDir=\"column\">\n                <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Device</Text>\n                <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Choose if this is the frame or the controller</Text>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n                <Button\n                    aria-label=\"clock\"\n                    minH=\"150px\"\n                    fontSize=\"4xl\"\n                    onClick={() => {\n                        setDevice('frame')\n                        localStorage.setItem('device', 'frame');\n                        history.push('/controller');\n                    }} m={1} colorScheme=\"gray\" isFullWidth\n                >\n                    <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                        <AiOutlinePicture color={isDay ? \"black\" : \"white\"} />\n                        <Text color={isDay ? \"black\" : \"white\"} fontSize=\"small\">Frame</Text>\n                    </Box>\n                </Button>\n                <Button\n                    aria-label=\"clock\"\n                    minH=\"150px\"\n                    fontSize=\"4xl\"\n                    onClick={() => {\n                        setDevice('controller')\n                        localStorage.setItem('device', 'controller');\n                        history.push('/controller');\n                    }} m={1} colorScheme=\"gray\" isFullWidth\n                >\n                    <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                        <GiRetroController color={isDay ? \"black\" : \"white\"} />\n                        <Text color={isDay ? \"black\" : \"white\"} fontSize=\"small\">Controller</Text>\n                    </Box>\n                </Button>\n                {/* <IconButton\n                onClick={() => {\n                    setDevice('frame')\n                    localStorage.setItem('device', 'frame');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" isFullWidth colorScheme=\"gray\" aria-label=\"frame\" minW=\"47%\" minH=\"200px\" m={1} icon={<AiOutlinePicture color={isDay ? \"black\" : \"white\"} />}\n            /> */}\n                {/* <IconButton\n                onClick={() => {\n                    setDevice('controller')\n                    localStorage.setItem('device', 'controller');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" colorScheme=\"gray\"\n                isFullWidth aria-label=\"controller\" minW=\"47%\" minH=\"240px\" m={1} icon={<GiRetroController color={isDay ? \"black\" : \"white\"} />}\n            /> */}\n            </Box>\n        </ScaleFade>\n    )\n}","export const DEFAULT_MONO_FONT = \"'Space Mono', monospace\"","import { Box, Divider } from '@chakra-ui/layout';\nimport { Text } from '@chakra-ui/react';\nimport { CgArrowLongDownC, CgArrowLongUpC } from 'react-icons/cg';\nimport { DEFAULT_MONO_FONT } from '../../constants';\nimport { useIsDay } from '../../hooks';\n\nconst daysOfTheWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const Future = (props: {\n    index: number,\n    forcast: {\n        weather: Array<{\n            icon: string,\n            main: string,\n        }>\n        temp: {\n            day: number,\n            min: number,\n            max: number,\n        },\n        dt: number,\n        sunrise: number,\n    };\n}) => {\n    const getDayOfWeek = () => {\n        if (today.getDay() + props.index > 6) {\n            return daysOfTheWeek[0];\n        }\n        return daysOfTheWeek[today.getDay() + props.index]\n    }\n    const isDay = useIsDay();\n    const today = new Date();\n    const { temp } = props.forcast;\n    const [current] = props.forcast.weather;\n    return (\n        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" padding=\"1em\" margin=\"1em\" borderRadius=\"1em\">\n            <Text fontWeight=\"300\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>\n                {getDayOfWeek()}\n            </Text>\n            <img style={{ maxWidth: '6em' }} alt=\"weather icon\" src={`https://openweathermap.org/img/wn/${current.icon}@4x.png`} />\n            <Box display=\"flex\" flexDir=\"row\">\n                <Text fontSize=\"2em\" fontWeight=\"100\" fontFamily={DEFAULT_MONO_FONT} display=\"flex\" flexDir=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <CgArrowLongUpC />\n                    {temp.max.toFixed(0)}°\n                    <Divider orientation=\"vertical\" marginLeft=\"1\" />\n                    <CgArrowLongDownC />\n                    {temp.min.toFixed(0)}°\n                </Text>\n            </Box>\n            <Text fontSize=\"2em\" fontWeight=\"100\">{current.main}</Text>\n        </Box>\n    )\n}","/* eslint-disable array-callback-return */\nimport { ScaleFade, Spinner, Tag, Text } from '@chakra-ui/react';\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\nimport { WiHumidity, WiStrongWind } from 'react-icons/wi';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport React from 'react';\nimport axios from 'axios';\nimport { useIsDay } from '../../hooks/index';\nimport { Future } from './Future';\nimport { DigitalClock } from '../DigitalClock';\nimport { DEFAULT_MONO_FONT } from '../../constants';\nimport { FaTemperatureHigh } from 'react-icons/fa';\nimport { CgArrowLongDownC, CgArrowLongUpC } from 'react-icons/cg';\n\nexport const Weather = () => {\n    const isDay = useIsDay();\n\n    const [weather, setWeather] = React.useState({\n        current: {\n            name: '',\n            wind: {\n                speed: 0,\n                deg: 0,\n            },\n            weather: [{\n                icon: '',\n                description: '',\n                main: '',\n            }],\n            temp: 0,\n            humidity: 0,\n            feels_like: 0,\n            wind_deg: 0,\n            wind_speed: 0,\n            wind_gust: 0,\n            daily: []\n        },\n        daily: [],\n        city: '',\n        loading: true,\n    });\n\n    React.useLayoutEffect(() => {\n        const getWeather = async () => {\n            const { data }: any = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            const { data: weather }: any = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=minutely,hourly&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            setWeather({ ...weather, city: data.name, loading: false });\n        }\n        getWeather();\n    }, []);\n\n    React.useLayoutEffect(() => {\n        const getWeather = async () => {\n            const { data }: any = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            const { data: weather }: any = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=minutely,hourly&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            setWeather({ ...weather, city: data.name, loading: false });\n            setTimeout(() => {\n                getWeather();\n            }, 60000);\n        }\n        setTimeout(() => {\n            getWeather();\n        }, 60000);\n    }, []);\n\n    const today = new Date();\n    const [liveWeather]: any = weather.current.weather;\n    const { daily, alerts }: any = weather;\n    const [todaysWeather]: any = daily;\n    console.log(todaysWeather)\n\n    if (weather.loading) {\n        return <><Spinner size=\"xl\" /></>\n    }\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\">\n                <Box display=\"flex\" flexDir=\"row\" alignItems=\"center\">\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box pl={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <DigitalClock fontSize=\"5em\" />\n                        </Box>\n                        <Divider marginBottom=\"10\" mt={16} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                        <Box p={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <Text lineHeight=\"40px\" fontWeight=\"400\" fontSize=\"6em\" color={isDay ? \"black\" : \"white\"}>{weather.city}</Text>\n                        </Box>\n                        <Box p={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <Text lineHeight=\"50px\" fontWeight=\"300\" fontSize=\"2.5em\" color={isDay ? \"black\" : \"white\"}>{today.toDateString()}</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Box display=\"flex\" justifyContent='center' alignItems='center'>\n                        <img alt=\"weather icon\" src={`https://openweathermap.org/img/wn/${liveWeather.icon}@4x.png`} />\n                    </Box>\n                    <Box flexGrow={1} />\n                </Box>\n                <Divider mt={5} mb={5} opacity={isDay ? 0.6 : 0.5} />\n                <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='row' pb=\"4\">\n                    {alerts && alerts.map((alert: any) => (\n                        <Box mr=\"1\">\n                            <Tag>{alert.event}</Tag>\n                        </Box>\n                    ))}\n                </Box>\n                <Box display=\"flex\" flexDir=\"row\">\n                    <Box pt={5} display=\"flex\" justifyContent='flex-start' alignItems='flex-start' flexDir='column'>\n                        <Text letterSpacing=\"-10px\" fontFamily={DEFAULT_MONO_FONT} lineHeight=\"0.9em\" fontWeight=\"100\" fontSize=\"14em\" color={isDay ? \"black\" : \"white\"}>\n                            {weather.current.temp.toFixed(0)}°\n                        </Text>\n                        <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>{liveWeather.description}</Text>\n                        <Box display=\"flex\" flexDir=\"row\">\n                            <Text fontSize=\"2em\" fontWeight=\"100\" fontFamily={DEFAULT_MONO_FONT} display=\"flex\" flexDir=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                                <CgArrowLongUpC />\n                                {todaysWeather.temp.max.toFixed(0)}°\n                                <Divider orientation=\"vertical\" marginLeft=\"1\" />\n                                <CgArrowLongDownC />\n                                {todaysWeather.temp.min.toFixed(0)}°\n                            </Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Divider orientation=\"vertical\" />\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box display=\"flex\" justifyContent='flex-end' alignItems='center' flexDir='column'>\n                            <WiHumidity color={isDay ? \"black\" : \"white\"} fontSize=\"60px\" />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"400\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.humidity}%</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Humidity</Text>\n                        </Box>\n                        <Box flexGrow={1} />\n                        <Divider mt={2} mb={2} />\n                        <Box flexGrow={1} />\n                        <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                            <FaTemperatureHigh color={isDay ? \"black\" : \"white\"} fontSize=\"40px\" />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"400\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.feels_like.toFixed(0)}°</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Feels Like</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                            <BsFillArrowUpCircleFill color={isDay ? \"black\" : \"white\"} fontSize=\"60px\" style={{ transform: `rotate(${weather.current.wind_deg}deg)`, transition: 'transform 1250ms ease-in-out' }} />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"200\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.wind_speed.toFixed(0)}mph</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Wind</Text>\n                        </Box>\n                        <Box flexGrow={1} />\n                        <Divider mt={2} mb={2} />\n                        <Box flexGrow={1} />\n                        <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                            <WiStrongWind color={isDay ? \"black\" : \"white\"} fontSize=\"60px\" />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"200\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.wind_gust.toFixed(0)}mph</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Gusts</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                </Box>\n                <Divider mt={12} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                <Box display=\"flex\" justifyContent='flex-start' alignItems='flex-start' flexDir='row' width=\"100%\">\n                    {daily.map((item: any, index: any) => {\n                        if (index !== 0 && index < 5) {\n                            return (\n                                <>\n                                    <Box flexGrow={1} />\n                                    <Future forcast={item} index={index} />\n                                    <Box flexGrow={1} />\n                                </>\n                            )\n                        }\n                        return null\n                    })}\n                </Box>\n            </Box>\n        </ScaleFade>\n    );\n}","import { ScaleFade, Text } from '@chakra-ui/react';\nimport { Box } from '@chakra-ui/layout';\nimport Lottie from 'react-lottie';\nimport HOLIDAY from './holiday.json';\nimport { DigitalClock } from '../components/DigitalClock';\n\nexport const Holiday = () => {\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: HOLIDAY,\n    };\n\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" lineHeight=\"10em\">\n                <Text color=\"#9e2a2b\" fontSize=\"6em\" fontFamily=\"'Festive', cursive\">It's Fall</Text>\n                <Text color=\"#9e2a2b\" fontSize=\"14em\" fontFamily=\"'Festive', cursive\">Y'all</Text>\n                <Box mt=\"5em\">\n                    <Lottie\n                        options={defaultOptions}\n                        height={400}\n                        width={700}\n                    />\n                </Box>\n            </Box>\n            <DigitalClock hideTime />\n        </ScaleFade>\n    )\n}","import { Box } from '@chakra-ui/layout';\nimport React from 'react';\n\nexport const DigitalTime = (props: { hideSeconds?: boolean }) => {\n    let now = new Date();\n    let options = {};\n    if(props.hideSeconds){\n        options = { hour: '2-digit', minute: '2-digit' };\n    }\n    const [time, setTime] = React.useState(now.toLocaleTimeString('en-US', options));\n    React.useLayoutEffect(() => {\n        const getTime = () => {\n            setTimeout(() => {\n                setTime(new Date().toLocaleTimeString('en-US', options));\n                getTime();\n            }, 1000);\n        }\n        getTime();\n    }, [])\n    return (\n        <Box>\n            {time}\n        </Box>\n    )\n}","import { Box } from '@chakra-ui/layout';\nimport { Text } from '@chakra-ui/react';\n\nimport { ScaleFade } from '@chakra-ui/transition';\nimport React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { DEFAULT_MONO_FONT } from '../../constants';\nimport { useIsDay } from '../../hooks/index';\nimport { DigitalTime } from '../DigitalTime';\n\nexport const Announcement = () => {\n    const isDay = useIsDay();\n    const history = useHistory();\n    const { previous }: { previous: string } = useParams();\n\n    React.useLayoutEffect(() => {\n        setTimeout(() => {\n            history.push(`/${previous}`)\n        }, 60000);\n    }, []);\n    \n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\">\n                <Text\n                    fontFamily={DEFAULT_MONO_FONT} fontWeight=\"100\" fontSize=\"4em\"\n                    color={isDay ? \"black\" : \"white\"}>\n                    It is:\n                </Text>\n                <Text\n                    letterSpacing=\"-10px\"\n                    fontFamily={DEFAULT_MONO_FONT} fontWeight=\"100\" fontSize=\"10em\"\n                    color={isDay ? \"black\" : \"white\"}>\n                    <DigitalTime hideSeconds />\n                </Text>\n            </Box>\n        </ScaleFade>\n    )\n}","import React from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { Clock } from '../components/Clock/index';\nimport { Controller } from '../components/Controller';\nimport { Video } from '../components/Video/index';\nimport { Device } from '../components/Device/index';\nimport { Weather } from '../components/Weather';\nimport { DigitalClock } from '../components/DigitalClock/index';\nimport { useTimeOfDay } from '../hooks';\nimport { Holiday } from '../Holiday';\nimport { Announcement } from '../components/Announcement/index';\n\nexport const Routes = (props: { socket: any, device: string }) => {\n    const timeOfDay = useTimeOfDay();\n    const history = useHistory();\n    // if(timeOfDay === 7){\n    //     history.push('/weather')\n    // }\n    // if(timeOfDay === 21){\n    //     history.push('/digital-clock')\n    // }\n    return (\n        <Switch>\n            <Route path=\"/weather\">\n                <Weather />\n            </Route>\n            <Route path=\"/clock\">\n                <Clock />\n            </Route>\n            <Route path=\"/digital-clock\">\n                <DigitalClock />\n            </Route>\n            <Route path=\"/videos/:name\">\n                <Video />\n            </Route>\n            <Route path=\"/controller\">\n                <Controller socket={props.socket} />\n            </Route>\n            <Route path=\"/device\">\n                <Device />\n            </Route>\n            <Route path=\"/holiday\">\n                <Holiday />\n            </Route>\n            <Route path=\"/announcement/:previous\">\n                <Announcement />\n            </Route>\n            <Route path=\"/*\">\n                <Redirect to=\"/controller\" />\n            </Route>\n        </Switch>\n    )\n}","import './App.css';\nimport React from 'react';\nimport { Box, IconButton } from '@chakra-ui/react';\nimport { Routes } from './routes';\nimport { useIsDay } from './hooks/index';\nimport { GiRetroController } from 'react-icons/gi';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport { io } from \"socket.io-client\";\nimport { Provider } from './providers';\nimport { IoIosRefresh } from 'react-icons/io';\n\nconst socket = io(`http://${process.env.REACT_APP_SERVER_IP}:4000`);\n\nconst App = () => {\n  const isDay = useIsDay();\n  const histroy = useHistory();\n  const location = useLocation();\n  const [device, setDevice] = React.useState(localStorage.getItem('device'));\n\n  const getBackgroundColor = () => {\n    if (location.pathname.includes('holiday')) {\n      return '#fff3cb'\n    }\n    if (location.pathname.includes('weather')) {\n      return '#e2e2e2'\n    }\n    return isDay ? '#fff' : '#000'\n  }\n\n  React.useEffect(() => {\n    socket.on(\"change_view\", (view) => {\n      console.log(view)\n      if (device === 'frame') {\n        if (view === 'reload') {\n          window.location.reload();\n        }\n        histroy.push(`/${view}`);\n      }\n    });\n  }, []);\n\n  return (\n    <Provider socket={socket} device={device} setDevice={setDevice}>\n      <Box\n        height={window.innerHeight}\n        width={window.innerWidth}\n        display=\"flex\"\n        alignItems={isMobile ? \"flex-start\" : \"center\"}\n        justifyContent='center'\n        style={{\n          backgroundColor: getBackgroundColor(),\n          overflow: 'hidden',\n        }}\n        pt={isMobile && 8}\n      >\n        <Routes socket={socket} device={device} />\n        {!location.pathname.includes('controller') && !location.pathname.includes('device') && <Link to=\"/controller\">\n          <IconButton colorScheme=\"gray\" size=\"lg\" icon={<GiRetroController />} style={{\n            position: 'fixed',\n            bottom: 0,\n            right: 0,\n            borderRadius: '5px 0px 0px',\n            minHeight: 70,\n            minWidth: 70\n          }} />\n        </Link>}\n        <IconButton colorScheme=\"gray\" size=\"lg\" icon={<IoIosRefresh />} style={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          borderRadius: '0px 5px 0px 0px',\n          minHeight: 70,\n          minWidth: 70,\n        }}\n          onClick={() => device === 'controller' ? socket.emit('change', 'refresh') : window.location.reload(true)}\n\n        />\n      </Box>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from 'react-query';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider>\n        <Router>\n          <App />\n        </Router>\n      </ChakraProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}