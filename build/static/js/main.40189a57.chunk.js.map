{"version":3,"sources":["hooks/index.tsx","components/Clock/index.tsx","providers/index.tsx","api/index.ts","components/Controller/index.tsx","components/Video/index.tsx","components/Device/index.tsx","constants.js","components/Weather/Future.tsx","components/DigitalClock/index.tsx","components/Weather/index.tsx","Holiday/index.tsx","routes/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["useIsDay","React","useState","Date","getHours","isDay","setIsDay","useLayoutEffect","checkTimeOfDay","setTimeout","Clock","theme","background","center","seconds","minutes","hour","tick","smallTickWidth","largeTickWidth","secondHandWidth","minuteHandWidth","hourHandWidth","initialScale","in","Context","createContext","value","socket","emit","view","data","device","setDevice","s","useGlobalState","useContext","Provider","props","children","getVideosList","axios","get","then","res","Controller","useQuery","isLoading","global","history","useHistory","useDisclosure","isOpen","onToggle","handleIsOpen","route","push","to","display","flexDir","minW","color","fontSize","fontWeight","marginBottom","flexWrap","justifyContent","maxW","minH","onClick","m","colorScheme","isFullWidth","alignItems","mt","map","item","string","charAt","toUpperCase","slice","replace","Video","name","useParams","size","console","log","style","overflow","filter","id","autoPlay","controls","width","loop","muted","playsInline","src","type","Device","localStorage","setItem","DEFAULT_MONO_FONT","daysOfTheWeek","Future","today","temp","forcast","current","weather","padding","margin","borderRadius","getDay","index","maxWidth","alt","icon","fontFamily","max","toFixed","orientation","marginLeft","min","main","DigitalClock","now","toLocaleTimeString","time","setTime","getTime","Weather","wind","speed","deg","description","humidity","feels_like","wind_deg","wind_speed","wind_gust","daily","city","loading","setWeather","getWeather","a","process","coord","lat","lon","liveWeather","alerts","todaysWeather","pl","mb","opacity","p","lineHeight","toDateString","flexGrow","pb","alert","mr","event","pt","letterSpacing","transform","transition","Holiday","defaultOptions","autoplay","animationData","HOLIDAY","options","height","Routes","timeOfDay","useTimeOfDay","path","io","App","histroy","location","useLocation","getItem","useEffect","on","window","reload","innerHeight","innerWidth","isMobile","backgroundColor","pathname","includes","position","bottom","right","minHeight","minWidth","left","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.40189a57.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const useIsDay = () => {\n    const [isDay, setIsDay] = React.useState(new Date().getHours() >= 6 && new Date().getHours() <= 17);\n\n    React.useLayoutEffect(() => {\n        const checkTimeOfDay = () => {\n            if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n                setIsDay(true);\n            }\n            else {\n                setIsDay(false);\n            }\n            setTimeout(() => {\n                checkTimeOfDay();\n            }, 300000);\n        }\n        checkTimeOfDay();\n    }, []);\n\n    // if (new Date().getHours() >= 6 && new Date().getHours() <= 17) {\n    //     return true\n    // }\n    return isDay;\n}\n\nexport const useTimeOfDay = () => {\n    const [timeOfDay, setTimeOfDay] = React.useState(new Date().getHours());\n    console.log(timeOfDay)\n    React.useLayoutEffect(() => {\n        const checkTimeOfDay = () => {\n            setTimeOfDay(new Date().getHours())\n            setTimeout(() => {\n                checkTimeOfDay();\n            }, 36000000);\n        }\n    }, [])\n\n    return timeOfDay;\n}","import { ScaleFade } from '@chakra-ui/react';\nimport React from 'react';\nimport AnalogClock from 'react-analog-clock';\nimport { useIsDay } from '../../hooks/index';\n\nexport const Clock = () => {\n    const isDay = useIsDay();\n    const theme = {\n        background: isDay ? '#fff' : '#000',\n        center: isDay ? '#000' : '#fff',\n        seconds: isDay ? '#000' : '#fff',\n        minutes: isDay ? '#000' : '#fff',\n        hour: isDay ? '#000' : '#fff',\n        tick: isDay ? '#000' : '#fff',\n        smallTickWidth: 2,\n        largeTickWidth: 4,\n        secondHandWidth: 3,\n        minuteHandWidth: 6,\n        hourHandWidth: 8,\n    };\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <AnalogClock theme={theme} />\n        </ScaleFade>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext({\n    value: {},\n    socket: {\n        emit: (view: string, data: any) => { }\n    },\n    device: 'frame',\n    setDevice: (s: string) => {}\n});\n\nexport const useGlobalState = () => React.useContext(Context);\n\nexport const Provider = (props: { children: React.ReactNode, value: any }) => {\n    return (\n        <Context.Provider value={{ ...props as any }}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import axios from \"axios\"\n\nexport const changeView = async (view: string) => {\n    await axios.post(`/api/change/${view}`);\n}\n\nexport const getVideosList = () => axios.get('/api/videos/list').then(res => res.data);","import React from 'react';\nimport { IconButton, Text, ScaleFade, useDisclosure, Button, Spinner } from '@chakra-ui/react';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport { AiOutlineClockCircle, AiFillVideoCamera } from 'react-icons/ai';\nimport { TiWeatherPartlySunny } from 'react-icons/ti';\nimport { FaDigitalTachograph } from 'react-icons/fa';\n\nimport { useIsDay } from '../../hooks/index';\nimport { useGlobalState } from '../../providers/index';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport { getVideosList } from '../../api';\nimport { useQuery } from 'react-query';\nimport { GiOakLeaf } from 'react-icons/gi';\n\nconst capitalizeFirstLetter = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1).replace('.mp4', '');\n}\n\nexport const Controller = (props: { socket: any }) => {\n    const { isLoading, data }: any = useQuery('videos', () => getVideosList());\n\n    const isDay = useIsDay();\n    const global = useGlobalState();\n    const history = useHistory();\n\n    const { isOpen, onToggle } = useDisclosure();\n\n    const handleIsOpen = (route: string) => {\n        onToggle();\n        setTimeout(() => {\n            history.push(route);\n        }, 500);\n    }\n\n    React.useLayoutEffect(() => {\n        onToggle();\n    }, [])\n\n    if (global.device === null) {\n        return <Redirect to=\"/device\" />\n    }\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    return (\n        <ScaleFade initialScale={0.9} in={isOpen}>\n            <Box display=\"flex\" flexDir=\"column\" minW={300} >\n                <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Controller</Text>\n                <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Change the view on the frame</Text>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"flex-start\">\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'clock') : handleIsOpen('/clock')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <AiOutlineClockCircle />\n                            <Text fontSize=\"xs\" mt=\"1\">Analog</Text>\n                        </Box>\n                    </Button>\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'weather') : handleIsOpen('/weather')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <TiWeatherPartlySunny />\n                            <Text fontSize=\"xs\" mt=\"1\">Weather</Text>\n                        </Box>\n                    </Button>\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'digital-clock') : handleIsOpen('/digital-clock')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <FaDigitalTachograph />\n                            <Text fontSize=\"xs\" mt=\"1\">Digital</Text>\n                        </Box>\n                    </Button>\n                    <Button\n                        aria-label=\"clock\"\n                        maxW=\"30%\"\n                        minH=\"90px\"\n                        fontSize=\"4xl\"\n                        onClick={() => global.device === 'controller' ? props.socket.emit('change', 'holiday') : handleIsOpen('/holiday')}\n                        m={1} colorScheme=\"gray\" isFullWidth\n                    >\n                        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                            <GiOakLeaf />\n                            <Text fontSize=\"xs\" mt=\"1\">Holiday</Text>\n                        </Box>\n                    </Button>\n                </Box>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} mt={4} />\n                <Box flexDir=\"row\" flexWrap=\"wrap\" display=\"flex\" justifyContent=\"flex-start\">\n                    {data.map((item: any) => (\n                        <Button\n                            aria-label=\"clock\"\n                            maxW=\"30%\"\n                            minH=\"90px\"\n                            fontSize=\"4xl\"\n                            onClick={() => global.device === 'controller' ? props.socket.emit('change', `videos/${item}`) : handleIsOpen(`videos/${item}`)}\n                            m={1} colorScheme=\"gray\" isFullWidth\n                        >\n                            <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                                <AiFillVideoCamera />\n                                <Text fontSize=\"small\">{capitalizeFirstLetter(item)}</Text>\n                            </Box>\n                        </Button>\n                    ))}\n                </Box>\n            </Box>\n        </ScaleFade>\n    )\n}","import { getVideosList } from \"../../api\";\nimport {\n    useQuery,\n} from 'react-query'\nimport { Spinner } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router\";\n\nexport const Video = () => {\n    const { isLoading, data } = useQuery('videos', () => getVideosList());\n    const { name }: any = useParams();\n    if (isLoading) {\n        return <Spinner size=\"xl\" />\n    }\n    console.log(data)\n    return (\n        <video style={{ overflow: 'hidden !important', filter: 'sepia(1)' }} id=\"videoPlayer\" autoPlay controls={false} width=\"100%\" loop muted playsInline>\n            <source src={`/videos/${name}`} type=\"video/mp4\" />\n            Sorry, your browser doesn't support embedded videos.\n        </video>\n    )\n}","import { Box, Button, ScaleFade, Text } from '@chakra-ui/react';\nimport { AiOutlinePicture } from 'react-icons/ai';\nimport { GiRetroController } from 'react-icons/gi';\nimport { useHistory } from 'react-router-dom';\nimport { useGlobalState } from '../../providers/index';\nimport { useIsDay } from '../../hooks/index';\nimport { Divider } from '@chakra-ui/layout';\n\nexport const Device = () => {\n    const { setDevice } = useGlobalState();\n    const history = useHistory();\n    const isDay = useIsDay();\n\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box color=\"white\" flexWrap=\"wrap\" display=\"flex\" minW={300} flexDir=\"column\">\n                <Text color={isDay ? \"black\" : 'white'} fontSize=\"2xl\" fontWeight=\"900\">Device</Text>\n                <Text color={isDay ? \"black\" : 'white'} marginBottom={4} fontSize=\"xs\">Choose if this is the frame or the controller</Text>\n                <Divider color=\"whiteAlpha.300\" marginBottom={4} />\n                <Button\n                    aria-label=\"clock\"\n                    minH=\"150px\"\n                    fontSize=\"4xl\"\n                    onClick={() => {\n                        setDevice('frame')\n                        localStorage.setItem('device', 'frame');\n                        history.push('/controller');\n                    }} m={1} colorScheme=\"gray\" isFullWidth\n                >\n                    <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                        <AiOutlinePicture color={isDay ? \"black\" : \"white\"} />\n                        <Text color={isDay ? \"black\" : \"white\"} fontSize=\"small\">Frame</Text>\n                    </Box>\n                </Button>\n                <Button\n                    aria-label=\"clock\"\n                    minH=\"150px\"\n                    fontSize=\"4xl\"\n                    onClick={() => {\n                        setDevice('controller')\n                        localStorage.setItem('device', 'controller');\n                        history.push('/controller');\n                    }} m={1} colorScheme=\"gray\" isFullWidth\n                >\n                    <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                        <GiRetroController color={isDay ? \"black\" : \"white\"} />\n                        <Text color={isDay ? \"black\" : \"white\"} fontSize=\"small\">Controller</Text>\n                    </Box>\n                </Button>\n                {/* <IconButton\n                onClick={() => {\n                    setDevice('frame')\n                    localStorage.setItem('device', 'frame');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" isFullWidth colorScheme=\"gray\" aria-label=\"frame\" minW=\"47%\" minH=\"200px\" m={1} icon={<AiOutlinePicture color={isDay ? \"black\" : \"white\"} />}\n            /> */}\n                {/* <IconButton\n                onClick={() => {\n                    setDevice('controller')\n                    localStorage.setItem('device', 'controller');\n                    history.push('/controller');\n                }}\n                fontSize=\"6xl\" colorScheme=\"gray\"\n                isFullWidth aria-label=\"controller\" minW=\"47%\" minH=\"240px\" m={1} icon={<GiRetroController color={isDay ? \"black\" : \"white\"} />}\n            /> */}\n            </Box>\n        </ScaleFade>\n    )\n}","export const DEFAULT_MONO_FONT = \"'Space Mono', monospace\"","import { Box, Divider } from '@chakra-ui/layout';\nimport { Text } from '@chakra-ui/react';\nimport { CgArrowLongDownC, CgArrowLongUpC } from 'react-icons/cg';\nimport { DEFAULT_MONO_FONT } from '../../constants';\nimport { useIsDay } from '../../hooks';\n\nconst daysOfTheWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const Future = (props: {\n    index: number,\n    forcast: {\n        weather: Array<{\n            icon: string,\n            main: string,\n        }>\n        temp: {\n            day: number,\n            min: number,\n            max: number,\n        },\n        dt: number,\n        sunrise: number,\n    };\n}) => {\n    const getDayOfWeek = () => {\n        if (today.getDay() + props.index > 6) {\n            return daysOfTheWeek[0];\n        }\n        return daysOfTheWeek[today.getDay() + props.index]\n    }\n    const isDay = useIsDay();\n    const today = new Date();\n    const { temp } = props.forcast;\n    const [current] = props.forcast.weather;\n    return (\n        <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" padding=\"1em\" margin=\"1em\" borderRadius=\"1em\">\n            <Text fontWeight=\"300\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>\n                {getDayOfWeek()}\n            </Text>\n            <img style={{ maxWidth: '6em' }} alt=\"weather icon\" src={`https://openweathermap.org/img/wn/${current.icon}@4x.png`} />\n            <Box display=\"flex\" flexDir=\"row\">\n                <Text fontSize=\"2em\" fontWeight=\"100\" fontFamily={DEFAULT_MONO_FONT} display=\"flex\" flexDir=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                    <CgArrowLongUpC />\n                    {temp.max.toFixed(0)}°\n                    <Divider orientation=\"vertical\" marginLeft=\"1\" />\n                    <CgArrowLongDownC />\n                    {temp.min.toFixed(0)}°\n                </Text>\n            </Box>\n            <Text fontSize=\"2em\" fontWeight=\"100\">{current.main}</Text>\n        </Box>\n    )\n}","import { Box } from '@chakra-ui/layout';\nimport { Fade, Text } from '@chakra-ui/react';\n\nimport React from 'react';\nimport { useIsDay } from '../../hooks/index';\n\nexport const DigitalClock = (props: { fontSize?: string }) => {\n    const isDay = useIsDay();\n    let now = new Date();\n    const [time, setTime] = React.useState(now.toLocaleTimeString());\n    React.useLayoutEffect(() => {\n        const getTime = () => {\n            setTimeout(() => {\n                setTime(new Date().toLocaleTimeString());\n                getTime();\n            }, 1000);\n        }\n        getTime();\n    }, [])\n    return (\n        <Fade in>\n            <Box>\n                <Text fontFamily=\"'Roboto Mono', monospace\" fontSize={props.fontSize || \"8em\"} color={isDay ? 'black' : 'white'}>{time}</Text>\n            </Box>\n        </Fade>\n    )\n}","/* eslint-disable array-callback-return */\nimport { ScaleFade, Spinner, Tag, Text } from '@chakra-ui/react';\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\nimport { WiHumidity, WiStrongWind } from 'react-icons/wi';\nimport { Box, Divider } from '@chakra-ui/layout';\nimport React from 'react';\nimport axios from 'axios';\nimport { useIsDay } from '../../hooks/index';\nimport { Future } from './Future';\nimport { DigitalClock } from '../DigitalClock';\nimport { DEFAULT_MONO_FONT } from '../../constants';\nimport { FaTemperatureHigh } from 'react-icons/fa';\nimport { CgArrowLongDownC, CgArrowLongUpC } from 'react-icons/cg';\n\nexport const Weather = () => {\n    const isDay = useIsDay();\n\n    const [weather, setWeather] = React.useState({\n        current: {\n            name: '',\n            wind: {\n                speed: 0,\n                deg: 0,\n            },\n            weather: [{\n                icon: '',\n                description: '',\n                main: '',\n            }],\n            temp: 0,\n            humidity: 0,\n            feels_like: 0,\n            wind_deg: 0,\n            wind_speed: 0,\n            wind_gust: 0,\n            daily: []\n        },\n        daily: [],\n        city: '',\n        loading: true,\n    });\n\n    React.useLayoutEffect(() => {\n        const getWeather = async () => {\n            const { data }: any = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            const { data: weather }: any = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=minutely,hourly&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            setWeather({ ...weather, city: data.name, loading: false });\n        }\n        getWeather();\n    }, []);\n\n    React.useLayoutEffect(() => {\n        const getWeather = async () => {\n            const { data }: any = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${process.env.REACT_APP_LOCATION}&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            const { data: weather }: any = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=minutely,hourly&appid=${process.env.REACT_APP_OPENWEATHERMAP}&units=imperial`)\n            setWeather({ ...weather, city: data.name, loading: false });\n            setTimeout(() => {\n                getWeather();\n            }, 60000);\n        }\n        setTimeout(() => {\n            getWeather();\n        }, 60000);\n    }, []);\n\n    const today = new Date();\n    const [liveWeather]: any = weather.current.weather;\n    const { daily, alerts }: any = weather;\n    const [todaysWeather]: any = daily;\n    console.log(todaysWeather)\n\n    if (weather.loading) {\n        return <><Spinner size=\"xl\" /></>\n    }\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\">\n                <Box display=\"flex\" flexDir=\"row\" alignItems=\"center\">\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box pl={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <DigitalClock fontSize=\"5em\" />\n                        </Box>\n                        <Divider marginBottom=\"10\" mt={16} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                        <Box p={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <Text lineHeight=\"40px\" fontWeight=\"400\" fontSize=\"6em\" color={isDay ? \"black\" : \"white\"}>{weather.city}</Text>\n                        </Box>\n                        <Box p={2} display=\"flex\" justifyContent='flex-start' alignItems='flex-start'>\n                            <Text lineHeight=\"50px\" fontWeight=\"300\" fontSize=\"2.5em\" color={isDay ? \"black\" : \"white\"}>{today.toDateString()}</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Box display=\"flex\" justifyContent='center' alignItems='center'>\n                        <img alt=\"weather icon\" src={`https://openweathermap.org/img/wn/${liveWeather.icon}@4x.png`} />\n                    </Box>\n                    <Box flexGrow={1} />\n                </Box>\n                <Divider mt={5} mb={5} opacity={isDay ? 0.6 : 0.5} />\n                <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='row' pb=\"4\">\n                    {alerts && alerts.map((alert: any) => (\n                        <Box mr=\"1\">\n                            <Tag>{alert.event}</Tag>\n                        </Box>\n                    ))}\n                </Box>\n                <Box display=\"flex\" flexDir=\"row\">\n                    <Box pt={5} display=\"flex\" justifyContent='flex-start' alignItems='flex-start' flexDir='column'>\n                        <Text letterSpacing=\"-10px\" fontFamily={DEFAULT_MONO_FONT} lineHeight=\"0.9em\" fontWeight=\"100\" fontSize=\"14em\" color={isDay ? \"black\" : \"white\"}>\n                            {weather.current.temp.toFixed(0)}°\n                        </Text>\n                        <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>{liveWeather.description}</Text>\n                        <Box display=\"flex\" flexDir=\"row\">\n                            <Text fontSize=\"2em\" fontWeight=\"100\" fontFamily={DEFAULT_MONO_FONT} display=\"flex\" flexDir=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                                <CgArrowLongUpC />\n                                {todaysWeather.temp.max.toFixed(0)}°\n                                <Divider orientation=\"vertical\" marginLeft=\"1\" />\n                                <CgArrowLongDownC />\n                                {todaysWeather.temp.min.toFixed(0)}°\n                            </Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Divider orientation=\"vertical\" />\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box display=\"flex\" justifyContent='flex-end' alignItems='center' flexDir='column'>\n                            <WiHumidity color={isDay ? \"black\" : \"white\"} fontSize=\"60px\" />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"400\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.humidity}%</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Humidity</Text>\n                        </Box>\n                        <Box flexGrow={1} />\n                        <Divider mt={2} mb={2} />\n                        <Box flexGrow={1} />\n                        <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                            <FaTemperatureHigh color={isDay ? \"black\" : \"white\"} fontSize=\"40px\" />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"400\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.feels_like.toFixed(0)}°</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Feels Like</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Box display=\"flex\" flexDir=\"column\">\n                        <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                            <BsFillArrowUpCircleFill color={isDay ? \"black\" : \"white\"} fontSize=\"60px\" style={{ transform: `rotate(${weather.current.wind_deg}deg)`, transition: 'transform 1250ms ease-in-out' }} />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"200\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.wind_speed.toFixed(0)}mph</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Wind</Text>\n                        </Box>\n                        <Box flexGrow={1} />\n                        <Divider mt={2} mb={2} />\n                        <Box flexGrow={1} />\n                        <Box display=\"flex\" justifyContent='center' alignItems='center' flexDir='column'>\n                            <WiStrongWind color={isDay ? \"black\" : \"white\"} fontSize=\"60px\" />\n                            <Text fontFamily={DEFAULT_MONO_FONT} lineHeight=\"60px\" fontWeight=\"200\" fontSize=\"3em\" color={isDay ? \"black\" : \"white\"}>{weather.current.wind_gust.toFixed(0)}mph</Text>\n                            <Text fontWeight=\"100\" fontSize=\"2em\" color={isDay ? \"black\" : \"white\"}>Gusts</Text>\n                        </Box>\n                    </Box>\n                    <Box flexGrow={1} />\n                </Box>\n                <Divider mt={12} mb={16} opacity={isDay ? 0.6 : 0.5} />\n                <Box display=\"flex\" justifyContent='flex-start' alignItems='flex-start' flexDir='row' width=\"100%\">\n                    {daily.map((item: any, index: any) => {\n                        if (index !== 0 && index < 5) {\n                            return (\n                                <>\n                                    <Box flexGrow={1} />\n                                    <Future forcast={item} index={index} />\n                                    <Box flexGrow={1} />\n                                </>\n                            )\n                        }\n                        return null\n                    })}\n                </Box>\n            </Box>\n        </ScaleFade>\n    );\n}","import { ScaleFade, Text } from '@chakra-ui/react';\nimport { Box } from '@chakra-ui/layout';\nimport Lottie from 'react-lottie';\nimport HOLIDAY from './holiday.json';\n\nexport const Holiday = () => {\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: HOLIDAY,\n    };\n\n    return (\n        <ScaleFade initialScale={0.9} in>\n            <Box display=\"flex\" flexDir=\"column\" alignItems=\"center\" lineHeight=\"10em\">\n                <Text color=\"#9e2a2b\" fontSize=\"6em\" fontFamily=\"'Festive', cursive\">It's Fall</Text>\n                <Text color=\"#9e2a2b\" fontSize=\"14em\" fontFamily=\"'Festive', cursive\">Y'all</Text>\n                <Box mt=\"5em\">\n                    <Lottie\n                        options={defaultOptions}\n                        height={400}\n                        width={700}\n                    />\n                </Box>\n            </Box>\n        </ScaleFade>\n    )\n}","import React from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { Clock } from '../components/Clock/index';\nimport { Controller } from '../components/Controller';\nimport { Video } from '../components/Video/index';\nimport { Device } from '../components/Device/index';\nimport { Weather } from '../components/Weather';\nimport { DigitalClock } from '../components/DigitalClock/index';\nimport { useTimeOfDay } from '../hooks';\nimport { Holiday } from '../Holiday';\n\nexport const Routes = (props: { socket: any, device: string }) => {\n    const timeOfDay = useTimeOfDay();\n    const history = useHistory();\n    // if(timeOfDay === 7){\n    //     history.push('/weather')\n    // }\n    // if(timeOfDay === 21){\n    //     history.push('/digital-clock')\n    // }\n    return (\n        <Switch>\n            <Route path=\"/weather\">\n                <Weather />\n            </Route>\n            <Route path=\"/clock\">\n                <Clock />\n            </Route>\n            <Route path=\"/digital-clock\">\n                <DigitalClock />\n            </Route>\n            <Route path=\"/videos/:name\">\n                <Video />\n            </Route>\n            <Route path=\"/controller\">\n                <Controller socket={props.socket} />\n            </Route>\n            <Route path=\"/device\">\n                <Device />\n            </Route>\n            <Route path=\"/holiday\">\n                <Holiday />\n            </Route>\n            <Route path=\"/*\">\n                <Redirect to=\"/controller\" />\n            </Route>\n        </Switch>\n    )\n}","import './App.css';\nimport React from 'react';\nimport { Box, IconButton } from '@chakra-ui/react';\nimport { Routes } from './routes';\nimport { useIsDay } from './hooks/index';\nimport { GiRetroController } from 'react-icons/gi';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\nimport { io } from \"socket.io-client\";\nimport { Provider } from './providers';\nimport { IoIosRefresh } from 'react-icons/io';\n\nconst socket = io(`http://${process.env.REACT_APP_SERVER_IP}:4000`);\n\nconst App = () => {\n  const isDay = useIsDay();\n  const histroy = useHistory();\n  const location = useLocation();\n  const [device, setDevice] = React.useState(localStorage.getItem('device'));\n\n  const getBackgroundColor = () => {\n    if (location.pathname.includes('holiday')) {\n      return '#fff3cb'\n    }\n    return isDay ? '#e2e2e2' : '#000'\n  }\n\n  React.useEffect(() => {\n    socket.on(\"change_view\", (view) => {\n      console.log(view)\n      if (device === 'frame') {\n        if (view === 'reload') {\n          window.location.reload();\n        }\n        histroy.push(`/${view}`);\n      }\n    });\n  }, []);\n\n  return (\n    <Provider socket={socket} device={device} setDevice={setDevice}>\n      <Box\n        height={window.innerHeight}\n        width={window.innerWidth}\n        display=\"flex\"\n        alignItems={isMobile ? \"flex-start\" : \"center\"}\n        justifyContent='center'\n        style={{\n          backgroundColor: getBackgroundColor(),\n        }}\n        pt={isMobile && 8}\n      >\n        <Routes socket={socket} device={device} />\n        {!location.pathname.includes('controller') && !location.pathname.includes('device') && <Link to=\"/controller\">\n          <IconButton colorScheme=\"gray\" size=\"lg\" icon={<GiRetroController />} style={{\n            position: 'fixed',\n            bottom: 0,\n            right: 0,\n            borderRadius: '5px 0px 0px',\n            minHeight: 70,\n            minWidth: 70\n          }} />\n        </Link>}\n        <IconButton colorScheme=\"gray\" size=\"lg\" icon={<IoIosRefresh />} style={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          borderRadius: '0px 5px 0px 0px',\n          minHeight: 70,\n          minWidth: 70,\n        }}\n          onClick={() => device === 'controller' ? socket.emit('change', 'refresh') : window.location.reload(true)}\n\n        />\n      </Box>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  QueryClient,\n  QueryClientProvider,\n} from 'react-query';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider>\n        <Router>\n          <App />\n        </Router>\n      </ChakraProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}